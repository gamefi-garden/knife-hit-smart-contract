{
  "version": "3.4",
  "log": [
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:58",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "51",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "8ec70ba0b73a52f2a0aaf01ed2ef61bae6fd76e340dd81449c31a56e37787bdd",
          "withoutMetadata": "8ec70ba0b73a52f2a0aaf01ed2ef61bae6fd76e340dd81449c31a56e37787bdd",
          "linkedWithoutMetadata": "8ec70ba0b73a52f2a0aaf01ed2ef61bae6fd76e340dd81449c31a56e37787bdd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin/contracts/interfaces/IERC1967.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:15",
        "version": {
          "withMetadata": "0d59dccb692e8452ee8b3133d5806d86fdf55c5264c6912c04f22f98bdac5eb4",
          "withoutMetadata": "0d59dccb692e8452ee8b3133d5806d86fdf55c5264c6912c04f22f98bdac5eb4",
          "linkedWithoutMetadata": "0d59dccb692e8452ee8b3133d5806d86fdf55c5264c6912c04f22f98bdac5eb4"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:22"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:18",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/Proxy.sol:Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:BeaconProxy": {
        "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:18",
        "version": {
          "withMetadata": "f79690d198378484efab2f7aa197ef5a51cc7545b0f7ce444e90e67d00a302b0",
          "withoutMetadata": "f79690d198378484efab2f7aa197ef5a51cc7545b0f7ce444e90e67d00a302b0",
          "linkedWithoutMetadata": "f79690d198378484efab2f7aa197ef5a51cc7545b0f7ce444e90e67d00a302b0"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:30"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:UpgradeableBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:16",
        "version": {
          "withMetadata": "3ac911a88be22970c5a7c325dbb90da9cc774186abb415601fceacd144706077",
          "withoutMetadata": "3ac911a88be22970c5a7c325dbb90da9cc774186abb415601fceacd144706077",
          "linkedWithoutMetadata": "3ac911a88be22970c5a7c325dbb90da9cc774186abb415601fceacd144706077"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "implementation()",
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_implementation",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UpgradeableBeacon",
              "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:ProxyAdmin": {
        "src": "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:13",
        "version": {
          "withMetadata": "6e29c6616667356bfbd6328db1859ad759cc52c190a0935d13ae022e85615706",
          "withoutMetadata": "6e29c6616667356bfbd6328db1859ad759cc52c190a0935d13ae022e85615706",
          "linkedWithoutMetadata": "6e29c6616667356bfbd6328db1859ad759cc52c190a0935d13ae022e85615706"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:ITransparentUpgradeableProxy": {
        "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:14",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [],
        "methods": [
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy": {
        "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:58",
        "version": {
          "withMetadata": "1585aae1118578ef4a21a08699789885f57ebba75f0aa186ba4d217ec4e03ebf",
          "withoutMetadata": "1585aae1118578ef4a21a08699789885f57ebba75f0aa186ba4d217ec4e03ebf",
          "linkedWithoutMetadata": "1585aae1118578ef4a21a08699789885f57ebba75f0aa186ba4d217ec4e03ebf"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:63"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "378ebd7b67e2c97c04e867f9faa92a9e0e05d6ca2916774c2e7ce246650e0963",
          "withoutMetadata": "378ebd7b67e2c97c04e867f9faa92a9e0e05d6ca2916774c2e7ce246650e0963",
          "linkedWithoutMetadata": "378ebd7b67e2c97c04e867f9faa92a9e0e05d6ca2916774c2e7ce246650e0963"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:34",
        "version": {
          "withMetadata": "7684590306caf69c893005b49e306488072d9940ae720694646b7633db13086e",
          "withoutMetadata": "7684590306caf69c893005b49e306488072d9940ae720694646b7633db13086e",
          "linkedWithoutMetadata": "7684590306caf69c893005b49e306488072d9940ae720694646b7633db13086e"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/AsyncKnifeHit.sol:AsyncKnifeHit": {
        "src": "contracts/AsyncKnifeHit.sol:32",
        "version": {
          "withMetadata": "47fe170b2909214efef156a0d60ce14e9f3d946e458596983984ddabd1fa4371",
          "withoutMetadata": "47fe170b2909214efef156a0d60ce14e9f3d946e458596983984ddabd1fa4371",
          "linkedWithoutMetadata": "47fe170b2909214efef156a0d60ce14e9f3d946e458596983984ddabd1fa4371"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/AsyncKnifeHit.sol:AsyncKnifeHitStorage",
          "contracts/interfaces/IAsyncKnifeHit.sol:IAsyncKnifeHit"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,uint8)",
          "version()",
          "getMatch(uint64)",
          "getMatches(uint64[])",
          "getGameConfig()",
          "getPlayingMatchDataOf(address)",
          "getEndMatchDataOf(address)",
          "getEndMatchesOf(address)",
          "getPlayingMatchesOf(address)",
          "findMatch(address,uint256,uint32[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "matches",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint64,t_struct(KnifeHitMatchData)3573_storage)",
              "contract": "AsyncKnifeHitStorage",
              "src": "contracts/AsyncKnifeHit.sol:17"
            },
            {
              "label": "availableMatches",
              "offset": 0,
              "slot": "1",
              "type": "t_struct(Uint64Set)4715_storage",
              "contract": "AsyncKnifeHitStorage",
              "src": "contracts/AsyncKnifeHit.sol:19"
            },
            {
              "label": "playerPlayingMatches",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_struct(Uint64Set)4715_storage)",
              "contract": "AsyncKnifeHitStorage",
              "src": "contracts/AsyncKnifeHit.sol:21"
            },
            {
              "label": "playerEndedMatches",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(Uint64Set)4715_storage)",
              "contract": "AsyncKnifeHitStorage",
              "src": "contracts/AsyncKnifeHit.sol:22"
            },
            {
              "label": "gameConfig",
              "offset": 0,
              "slot": "5",
              "type": "t_struct(KnifeHitGameConfig)3694_storage",
              "contract": "AsyncKnifeHitStorage",
              "src": "contracts/AsyncKnifeHit.sol:24"
            },
            {
              "label": "treasury",
              "offset": 0,
              "slot": "26",
              "type": "t_address",
              "contract": "AsyncKnifeHitStorage",
              "src": "contracts/AsyncKnifeHit.sol:26"
            },
            {
              "label": "feePercentage",
              "offset": 20,
              "slot": "26",
              "type": "t_uint8",
              "contract": "AsyncKnifeHitStorage",
              "src": "contracts/AsyncKnifeHit.sol:27"
            },
            {
              "label": "matchNumber",
              "offset": 21,
              "slot": "26",
              "type": "t_uint64",
              "contract": "AsyncKnifeHitStorage",
              "src": "contracts/AsyncKnifeHit.sol:29"
            },
            {
              "label": "_initialized",
              "offset": 29,
              "slot": "26",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 30,
              "slot": "26",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "27",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "77",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "78",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "127",
              "type": "t_bool",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "128",
              "type": "t_array(t_uint256)49_storage",
              "contract": "PausableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "177",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "178",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)2_storage": {
              "label": "address[2]",
              "numberOfBytes": "64"
            },
            "t_array(t_struct(KnifeHitLevelConfig)3703_storage)10_storage": {
              "label": "struct KnifeHitLogic.KnifeHitLevelConfig[10]",
              "numberOfBytes": "640"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint32)2_storage": {
              "label": "uint32[2]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint32)dyn_storage": {
              "label": "uint32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint64)dyn_storage": {
              "label": "uint64[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(GamePhase)3543": {
              "label": "enum IAsyncKnifeHit.GamePhase",
              "members": [
                "None",
                "Playing",
                "End"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Uint64Set)4715_storage)": {
              "label": "mapping(address => struct Set.Uint64Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_struct(KnifeHitMatchData)3573_storage)": {
              "label": "mapping(uint64 => struct IAsyncKnifeHit.KnifeHitMatchData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_uint64)": {
              "label": "mapping(uint64 => uint64)",
              "numberOfBytes": "32"
            },
            "t_struct(KnifeHitGameConfig)3694_storage": {
              "label": "struct KnifeHitLogic.KnifeHitGameConfig",
              "members": [
                {
                  "label": "gameDuration",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "ratio",
                  "type": "t_uint32",
                  "offset": 4,
                  "slot": "0"
                },
                {
                  "label": "configs",
                  "type": "t_array(t_struct(KnifeHitLevelConfig)3703_storage)10_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "672"
            },
            "t_struct(KnifeHitLevelConfig)3703_storage": {
              "label": "struct KnifeHitLogic.KnifeHitLevelConfig",
              "members": [
                {
                  "label": "easeType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "rotateSpeed",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "knifeCount",
                  "type": "t_uint32",
                  "offset": 4,
                  "slot": "1"
                },
                {
                  "label": "obstacle",
                  "type": "t_uint32",
                  "offset": 8,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(KnifeHitMatchData)3573_storage": {
              "label": "struct IAsyncKnifeHit.KnifeHitMatchData",
              "members": [
                {
                  "label": "matchId",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 8,
                  "slot": "0"
                },
                {
                  "label": "entry",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "winer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "logicVersion",
                  "type": "t_uint8",
                  "offset": 20,
                  "slot": "3"
                },
                {
                  "label": "gamePhase",
                  "type": "t_enum(GamePhase)3543",
                  "offset": 21,
                  "slot": "3"
                },
                {
                  "label": "playerAddresses",
                  "type": "t_array(t_address)2_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "player1Actions",
                  "type": "t_array(t_uint32)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "player2Actions",
                  "type": "t_array(t_uint32)dyn_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "playerScore",
                  "type": "t_array(t_uint32)2_storage",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_struct(Uint64Set)4715_storage": {
              "label": "struct Set.Uint64Set",
              "members": [
                {
                  "label": "values",
                  "type": "t_array(t_uint64)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "positions",
                  "type": "t_mapping(t_uint64,t_uint64)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/AsyncKnifeHit.sol:AsyncKnifeHitStorage": {
        "src": "contracts/AsyncKnifeHit.sol:16",
        "inherit": [
          "contracts/interfaces/IAsyncKnifeHit.sol:IAsyncKnifeHit"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "matches",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint64,t_struct(KnifeHitMatchData)3573_storage)",
              "contract": "AsyncKnifeHitStorage",
              "src": "contracts/AsyncKnifeHit.sol:17"
            },
            {
              "label": "availableMatches",
              "offset": 0,
              "slot": "1",
              "type": "t_struct(Uint64Set)4715_storage",
              "contract": "AsyncKnifeHitStorage",
              "src": "contracts/AsyncKnifeHit.sol:19"
            },
            {
              "label": "playerPlayingMatches",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_struct(Uint64Set)4715_storage)",
              "contract": "AsyncKnifeHitStorage",
              "src": "contracts/AsyncKnifeHit.sol:21"
            },
            {
              "label": "playerEndedMatches",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(Uint64Set)4715_storage)",
              "contract": "AsyncKnifeHitStorage",
              "src": "contracts/AsyncKnifeHit.sol:22"
            },
            {
              "label": "gameConfig",
              "offset": 0,
              "slot": "5",
              "type": "t_struct(KnifeHitGameConfig)3694_storage",
              "contract": "AsyncKnifeHitStorage",
              "src": "contracts/AsyncKnifeHit.sol:24"
            },
            {
              "label": "treasury",
              "offset": 0,
              "slot": "26",
              "type": "t_address",
              "contract": "AsyncKnifeHitStorage",
              "src": "contracts/AsyncKnifeHit.sol:26"
            },
            {
              "label": "feePercentage",
              "offset": 20,
              "slot": "26",
              "type": "t_uint8",
              "contract": "AsyncKnifeHitStorage",
              "src": "contracts/AsyncKnifeHit.sol:27"
            },
            {
              "label": "matchNumber",
              "offset": 21,
              "slot": "26",
              "type": "t_uint64",
              "contract": "AsyncKnifeHitStorage",
              "src": "contracts/AsyncKnifeHit.sol:29"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)2_storage": {
              "label": "address[2]",
              "numberOfBytes": "64"
            },
            "t_array(t_struct(KnifeHitLevelConfig)3703_storage)10_storage": {
              "label": "struct KnifeHitLogic.KnifeHitLevelConfig[10]",
              "numberOfBytes": "640"
            },
            "t_array(t_uint32)2_storage": {
              "label": "uint32[2]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint32)dyn_storage": {
              "label": "uint32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint64)dyn_storage": {
              "label": "uint64[]",
              "numberOfBytes": "32"
            },
            "t_enum(GamePhase)3543": {
              "label": "enum IAsyncKnifeHit.GamePhase",
              "members": [
                "None",
                "Playing",
                "End"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Uint64Set)4715_storage)": {
              "label": "mapping(address => struct Set.Uint64Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_struct(KnifeHitMatchData)3573_storage)": {
              "label": "mapping(uint64 => struct IAsyncKnifeHit.KnifeHitMatchData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_uint64)": {
              "label": "mapping(uint64 => uint64)",
              "numberOfBytes": "32"
            },
            "t_struct(KnifeHitGameConfig)3694_storage": {
              "label": "struct KnifeHitLogic.KnifeHitGameConfig",
              "members": [
                {
                  "label": "gameDuration",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "ratio",
                  "type": "t_uint32",
                  "offset": 4,
                  "slot": "0"
                },
                {
                  "label": "configs",
                  "type": "t_array(t_struct(KnifeHitLevelConfig)3703_storage)10_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "672"
            },
            "t_struct(KnifeHitLevelConfig)3703_storage": {
              "label": "struct KnifeHitLogic.KnifeHitLevelConfig",
              "members": [
                {
                  "label": "easeType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "rotateSpeed",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "knifeCount",
                  "type": "t_uint32",
                  "offset": 4,
                  "slot": "1"
                },
                {
                  "label": "obstacle",
                  "type": "t_uint32",
                  "offset": 8,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(KnifeHitMatchData)3573_storage": {
              "label": "struct IAsyncKnifeHit.KnifeHitMatchData",
              "members": [
                {
                  "label": "matchId",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 8,
                  "slot": "0"
                },
                {
                  "label": "entry",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "winer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "logicVersion",
                  "type": "t_uint8",
                  "offset": 20,
                  "slot": "3"
                },
                {
                  "label": "gamePhase",
                  "type": "t_enum(GamePhase)3543",
                  "offset": 21,
                  "slot": "3"
                },
                {
                  "label": "playerAddresses",
                  "type": "t_array(t_address)2_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "player1Actions",
                  "type": "t_array(t_uint32)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "player2Actions",
                  "type": "t_array(t_uint32)dyn_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "playerScore",
                  "type": "t_array(t_uint32)2_storage",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_struct(Uint64Set)4715_storage": {
              "label": "struct Set.Uint64Set",
              "members": [
                {
                  "label": "values",
                  "type": "t_array(t_uint64)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "positions",
                  "type": "t_mapping(t_uint64,t_uint64)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/interfaces/IAsyncKnifeHit.sol:IAsyncKnifeHit": {
        "src": "contracts/interfaces/IAsyncKnifeHit.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "version()",
          "getPlayingMatchesOf(address)",
          "getEndMatchesOf(address)",
          "getPlayingMatchDataOf(address)",
          "getEndMatchDataOf(address)",
          "getMatch(uint64)",
          "getMatches(uint64[])",
          "getGameConfig()",
          "findMatch(address,uint256,uint32[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/libraries/KnifeHitLogic.sol:KnifeHitLogic": {
        "src": "contracts/libraries/KnifeHitLogic.sol:5",
        "version": {
          "withMetadata": "9981f8ff806567312b61a4245f96895397f1a3ff726c6dd6db9ab93f73c9ed12",
          "withoutMetadata": "9981f8ff806567312b61a4245f96895397f1a3ff726c6dd6db9ab93f73c9ed12",
          "linkedWithoutMetadata": "9981f8ff806567312b61a4245f96895397f1a3ff726c6dd6db9ab93f73c9ed12"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "revertActionData(uint256,(uint32,uint32,struct KnifeHitLogic.KnifeHitLevelConfig[10]),uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/libraries/MemArray.sol:MemArray": {
        "src": "contracts/libraries/MemArray.sol:4",
        "version": {
          "withMetadata": "680f6fdcd914b9662d57a0aa7b8edf74c0fc100b1d8d0a2acf6f03b64d21a90e",
          "withoutMetadata": "680f6fdcd914b9662d57a0aa7b8edf74c0fc100b1d8d0a2acf6f03b64d21a90e",
          "linkedWithoutMetadata": "680f6fdcd914b9662d57a0aa7b8edf74c0fc100b1d8d0a2acf6f03b64d21a90e"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/libraries/Set.sol:Set": {
        "src": "contracts/libraries/Set.sol:5",
        "version": {
          "withMetadata": "03100b15460fd483619836962945a08dc9db5c4067d5c49e1ac582eb6b234f69",
          "withoutMetadata": "03100b15460fd483619836962945a08dc9db5c4067d5c49e1ac582eb6b234f69",
          "linkedWithoutMetadata": "03100b15460fd483619836962945a08dc9db5c4067d5c49e1ac582eb6b234f69"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "1f8d545d7ca87bcb9912a34680342a49b43b55ccadbd61afdc48dd0ce72f43ad",
          "withoutMetadata": "1f8d545d7ca87bcb9912a34680342a49b43b55ccadbd61afdc48dd0ce72f43ad",
          "linkedWithoutMetadata": "1f8d545d7ca87bcb9912a34680342a49b43b55ccadbd61afdc48dd0ce72f43ad"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    }
  ]
}