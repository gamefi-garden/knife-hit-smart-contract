{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x6e5AA65AeC3168C845A65173f0a1a1d20006C4a3",
    "txHash": "0x472e91c7a67b8b037f6351c869c036a2ab8ed218688d0fd1d96f1a0eb1be8920"
  },
  "proxies": [
    {
      "address": "0xadc628d4A1680070e5D07f2f99816dC8c00F13bA",
      "txHash": "0x74756efbc03d57ed5a870ab590ed463dedfa40cac0c4041e35b469e3cee4d36d",
      "kind": "transparent"
    },
    {
      "address": "0x3dA70Fc99EF53e723B4F1F35B612a152FC2d88ad",
      "txHash": "0xcd854e4b2557e1b035229e6b1aab69949bb757d82e6b7ca1d70ce4c962134ac9",
      "kind": "transparent"
    },
    {
      "address": "0xFA28C83B0969861024c6083184b42e664E82de35",
      "txHash": "0xe6d0ec6bf86089dca2ec5c6bfb13fd064af7a503088a98965660bd1cc4ccdf3d",
      "kind": "transparent"
    },
    {
      "address": "0xA38485507EcA06f3a159C35C7Fb9b9624FF07E2F",
      "txHash": "0xb6be35dbc1874b80ebd4f246b99e482dd487bc673123cb1451f4608efbeeb5dd",
      "kind": "transparent"
    },
    {
      "address": "0x4C024E0a25e9Df4E6764e0CAEB97Eb13e807d30B",
      "txHash": "0x37c3265a72a6e44766990419a0f8e4918310a3f33f67ebb0b86a337fe82dc636",
      "kind": "transparent"
    },
    {
      "address": "0xaeb932f290b96A6ba6650f525a022da66d7e63A8",
      "txHash": "0x8f2dde4cd4a9214cb485299f08374128da890f96f97e6ff2361960fa2fbefcea",
      "kind": "transparent"
    }
  ],
  "impls": {
    "e1d32bb8e8ae5ef295bc4c615bbcbafc7a69957221056b664a936bba69b20d8c": {
      "address": "0x9936467588027225ae311970304591e98Adf04f9",
      "txHash": "0x92c1b02d0f73920f2be317c6edceeaf3274079c24749ec5816d6804084140362",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "matches",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint64,t_struct(RspMatchData)2234_storage)",
            "contract": "RockScissorsPaperDuelStorage",
            "src": "contracts/RockScissorsPaperDuel.sol:14"
          },
          {
            "label": "duelGameHub",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "RockScissorsPaperDuelStorage",
            "src": "contracts/RockScissorsPaperDuel.sol:16"
          },
          {
            "label": "actionTimeLimit",
            "offset": 20,
            "slot": "1",
            "type": "t_uint40",
            "contract": "RockScissorsPaperDuelStorage",
            "src": "contracts/RockScissorsPaperDuel.sol:17"
          },
          {
            "label": "revelationTimeLimit",
            "offset": 25,
            "slot": "1",
            "type": "t_uint40",
            "contract": "RockScissorsPaperDuelStorage",
            "src": "contracts/RockScissorsPaperDuel.sol:18"
          },
          {
            "label": "tieBreakScore",
            "offset": 30,
            "slot": "1",
            "type": "t_uint8",
            "contract": "RockScissorsPaperDuelStorage",
            "src": "contracts/RockScissorsPaperDuel.sol:19"
          },
          {
            "label": "_initialized",
            "offset": 31,
            "slot": "1",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 0,
            "slot": "2",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "53",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "54",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "103",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_enum(RspAction)2381)dyn_storage": {
            "label": "enum RockScissorsPaperLogic.RspAction[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(RspAction)2381": {
            "label": "enum RockScissorsPaperLogic.RspAction",
            "members": [
              "Rock",
              "Scissor",
              "Paper"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(RspMatchState)2194": {
            "label": "enum IRockScissorsPaperDuel.RspMatchState",
            "members": [
              "Nil",
              "WaitingForActionHash",
              "WaitingForAction",
              "Player_1_Won",
              "Player_2_Won",
              "Drawn",
              "Aborted"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint64,t_struct(RspMatchData)2234_storage)": {
            "label": "mapping(uint64 => struct IRockScissorsPaperDuel.RspMatchData)",
            "numberOfBytes": "32"
          },
          "t_struct(RspMatchData)2234_storage": {
            "label": "struct IRockScissorsPaperDuel.RspMatchData",
            "members": [
              {
                "label": "lastPlayer1ActionHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastPlayer2ActionHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "player1Actions",
                "type": "t_array(t_enum(RspAction)2381)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "player2Actions",
                "type": "t_array(t_enum(RspAction)2381)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "round",
                "type": "t_uint16",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "actionTimeLimit",
                "type": "t_uint40",
                "offset": 2,
                "slot": "4"
              },
              {
                "label": "revelationTimeLimit",
                "type": "t_uint40",
                "offset": 7,
                "slot": "4"
              },
              {
                "label": "player1",
                "type": "t_address",
                "offset": 12,
                "slot": "4"
              },
              {
                "label": "player2",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "player1Score",
                "type": "t_uint16",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "player2Score",
                "type": "t_uint16",
                "offset": 22,
                "slot": "5"
              },
              {
                "label": "checkpoint",
                "type": "t_uint40",
                "offset": 24,
                "slot": "5"
              },
              {
                "label": "player1Submitted",
                "type": "t_bool",
                "offset": 29,
                "slot": "5"
              },
              {
                "label": "player2Submitted",
                "type": "t_bool",
                "offset": 30,
                "slot": "5"
              },
              {
                "label": "state",
                "type": "t_enum(RspMatchState)2194",
                "offset": 31,
                "slot": "5"
              },
              {
                "label": "logicVersion",
                "type": "t_uint8",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "tieBreakScore",
                "type": "t_uint8",
                "offset": 1,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint40": {
            "label": "uint40",
            "numberOfBytes": "5"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4544614a2a197e06aeadf3bda692b53c2d7ce6808000acad1dda51a920ad39ef": {
      "address": "0x060DA189128b1912601adFCe74eC6bed286c832A",
      "txHash": "0x26f36dd1fbef03d0feef1d607fceffb433beb7ae6e9183d711243df9b6db530c",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "matches",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint64,t_struct(RspMatchData)2234_storage)",
            "contract": "RockScissorsPaperDuelStorage",
            "src": "contracts/RockScissorsPaperDuel.sol:14"
          },
          {
            "label": "duelGameHub",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "RockScissorsPaperDuelStorage",
            "src": "contracts/RockScissorsPaperDuel.sol:16"
          },
          {
            "label": "actionTimeLimit",
            "offset": 20,
            "slot": "1",
            "type": "t_uint40",
            "contract": "RockScissorsPaperDuelStorage",
            "src": "contracts/RockScissorsPaperDuel.sol:17"
          },
          {
            "label": "revelationTimeLimit",
            "offset": 25,
            "slot": "1",
            "type": "t_uint40",
            "contract": "RockScissorsPaperDuelStorage",
            "src": "contracts/RockScissorsPaperDuel.sol:18"
          },
          {
            "label": "tieBreakScore",
            "offset": 30,
            "slot": "1",
            "type": "t_uint8",
            "contract": "RockScissorsPaperDuelStorage",
            "src": "contracts/RockScissorsPaperDuel.sol:19"
          },
          {
            "label": "_initialized",
            "offset": 31,
            "slot": "1",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 0,
            "slot": "2",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "53",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "54",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "103",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_enum(RspAction)2381)dyn_storage": {
            "label": "enum RockScissorsPaperLogic.RspAction[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(RspAction)2381": {
            "label": "enum RockScissorsPaperLogic.RspAction",
            "members": [
              "Rock",
              "Scissor",
              "Paper"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(RspMatchState)2194": {
            "label": "enum IRockScissorsPaperDuel.RspMatchState",
            "members": [
              "Nil",
              "WaitingForActionHash",
              "WaitingForAction",
              "Player_1_Won",
              "Player_2_Won",
              "Drawn",
              "Aborted"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint64,t_struct(RspMatchData)2234_storage)": {
            "label": "mapping(uint64 => struct IRockScissorsPaperDuel.RspMatchData)",
            "numberOfBytes": "32"
          },
          "t_struct(RspMatchData)2234_storage": {
            "label": "struct IRockScissorsPaperDuel.RspMatchData",
            "members": [
              {
                "label": "lastPlayer1ActionHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastPlayer2ActionHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "player1Actions",
                "type": "t_array(t_enum(RspAction)2381)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "player2Actions",
                "type": "t_array(t_enum(RspAction)2381)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "round",
                "type": "t_uint16",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "actionTimeLimit",
                "type": "t_uint40",
                "offset": 2,
                "slot": "4"
              },
              {
                "label": "revelationTimeLimit",
                "type": "t_uint40",
                "offset": 7,
                "slot": "4"
              },
              {
                "label": "player1",
                "type": "t_address",
                "offset": 12,
                "slot": "4"
              },
              {
                "label": "player2",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "player1Score",
                "type": "t_uint16",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "player2Score",
                "type": "t_uint16",
                "offset": 22,
                "slot": "5"
              },
              {
                "label": "checkpoint",
                "type": "t_uint40",
                "offset": 24,
                "slot": "5"
              },
              {
                "label": "player1Submitted",
                "type": "t_bool",
                "offset": 29,
                "slot": "5"
              },
              {
                "label": "player2Submitted",
                "type": "t_bool",
                "offset": 30,
                "slot": "5"
              },
              {
                "label": "state",
                "type": "t_enum(RspMatchState)2194",
                "offset": 31,
                "slot": "5"
              },
              {
                "label": "logicVersion",
                "type": "t_uint8",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "tieBreakScore",
                "type": "t_uint8",
                "offset": 1,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint40": {
            "label": "uint40",
            "numberOfBytes": "5"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "79cd72001346e6da4bd912df2b88f0f03c8ef2472d9067661e08221d526c814f": {
      "address": "0x4b7Ca2ca33d72ddC2B8161a665085C527c4C3E98",
      "txHash": "0x158cc4ebbb534e5c2b699d069468862dc802a497091061fbad8c82461d687f06",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "matches",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint64,t_struct(RspMatchData)2242_storage)",
            "contract": "RockScissorsPaperDuelStorage",
            "src": "contracts/RockScissorsPaperDuel.sol:14"
          },
          {
            "label": "duelGameHub",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "RockScissorsPaperDuelStorage",
            "src": "contracts/RockScissorsPaperDuel.sol:16"
          },
          {
            "label": "actionTimeLimit",
            "offset": 20,
            "slot": "1",
            "type": "t_uint40",
            "contract": "RockScissorsPaperDuelStorage",
            "src": "contracts/RockScissorsPaperDuel.sol:17"
          },
          {
            "label": "revelationTimeLimit",
            "offset": 25,
            "slot": "1",
            "type": "t_uint40",
            "contract": "RockScissorsPaperDuelStorage",
            "src": "contracts/RockScissorsPaperDuel.sol:18"
          },
          {
            "label": "tieBreakScore",
            "offset": 30,
            "slot": "1",
            "type": "t_uint8",
            "contract": "RockScissorsPaperDuelStorage",
            "src": "contracts/RockScissorsPaperDuel.sol:19"
          },
          {
            "label": "_initialized",
            "offset": 31,
            "slot": "1",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 0,
            "slot": "2",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "53",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "54",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "103",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_enum(RspAction)2389)dyn_storage": {
            "label": "enum RockScissorsPaperLogic.RspAction[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(RspAction)2389": {
            "label": "enum RockScissorsPaperLogic.RspAction",
            "members": [
              "Rock",
              "Scissor",
              "Paper"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(RspMatchState)2202": {
            "label": "enum IRockScissorsPaperDuel.RspMatchState",
            "members": [
              "Nil",
              "WaitingForActionHash",
              "WaitingForAction",
              "Player_1_Won",
              "Player_2_Won",
              "Drawn",
              "Aborted"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint64,t_struct(RspMatchData)2242_storage)": {
            "label": "mapping(uint64 => struct IRockScissorsPaperDuel.RspMatchData)",
            "numberOfBytes": "32"
          },
          "t_struct(RspMatchData)2242_storage": {
            "label": "struct IRockScissorsPaperDuel.RspMatchData",
            "members": [
              {
                "label": "lastPlayer1ActionHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastPlayer2ActionHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "player1Actions",
                "type": "t_array(t_enum(RspAction)2389)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "player2Actions",
                "type": "t_array(t_enum(RspAction)2389)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "round",
                "type": "t_uint16",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "actionTimeLimit",
                "type": "t_uint40",
                "offset": 2,
                "slot": "4"
              },
              {
                "label": "revelationTimeLimit",
                "type": "t_uint40",
                "offset": 7,
                "slot": "4"
              },
              {
                "label": "player1",
                "type": "t_address",
                "offset": 12,
                "slot": "4"
              },
              {
                "label": "player2",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "player1Score",
                "type": "t_uint16",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "player2Score",
                "type": "t_uint16",
                "offset": 22,
                "slot": "5"
              },
              {
                "label": "checkpoint",
                "type": "t_uint40",
                "offset": 24,
                "slot": "5"
              },
              {
                "label": "player1Submitted",
                "type": "t_bool",
                "offset": 29,
                "slot": "5"
              },
              {
                "label": "player2Submitted",
                "type": "t_bool",
                "offset": 30,
                "slot": "5"
              },
              {
                "label": "state",
                "type": "t_enum(RspMatchState)2202",
                "offset": 31,
                "slot": "5"
              },
              {
                "label": "logicVersion",
                "type": "t_uint8",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "tieBreakScore",
                "type": "t_uint8",
                "offset": 1,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint40": {
            "label": "uint40",
            "numberOfBytes": "5"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c9fc63bd84e9b753e5392908647e0ff293b4bd8daffe0402c05574c81632a1a1": {
      "address": "0x042F86d4D1edA6452E896C66deA41B2Ccb79CC93",
      "txHash": "0x4d6f1895ed2dfdca0f487f582720562ba62100c14181b3af90253d3d916b9255",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "matches",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint64,t_struct(RspMatchData)2246_storage)",
            "contract": "RockScissorsPaperDuelStorage",
            "src": "contracts/RockScissorsPaperDuel.sol:14"
          },
          {
            "label": "duelGameHub",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "RockScissorsPaperDuelStorage",
            "src": "contracts/RockScissorsPaperDuel.sol:16"
          },
          {
            "label": "actionTimeLimit",
            "offset": 20,
            "slot": "1",
            "type": "t_uint40",
            "contract": "RockScissorsPaperDuelStorage",
            "src": "contracts/RockScissorsPaperDuel.sol:17"
          },
          {
            "label": "revelationTimeLimit",
            "offset": 25,
            "slot": "1",
            "type": "t_uint40",
            "contract": "RockScissorsPaperDuelStorage",
            "src": "contracts/RockScissorsPaperDuel.sol:18"
          },
          {
            "label": "tieBreakScore",
            "offset": 30,
            "slot": "1",
            "type": "t_uint8",
            "contract": "RockScissorsPaperDuelStorage",
            "src": "contracts/RockScissorsPaperDuel.sol:19"
          },
          {
            "label": "_initialized",
            "offset": 31,
            "slot": "1",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 0,
            "slot": "2",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "53",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "54",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "103",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_enum(RspAction)2393)dyn_storage": {
            "label": "enum RockScissorsPaperLogic.RspAction[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(RspAction)2393": {
            "label": "enum RockScissorsPaperLogic.RspAction",
            "members": [
              "Rock",
              "Scissor",
              "Paper"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(RspMatchState)2206": {
            "label": "enum IRockScissorsPaperDuel.RspMatchState",
            "members": [
              "Nil",
              "WaitingForActionHash",
              "WaitingForAction",
              "Player_1_Won",
              "Player_2_Won",
              "Drawn",
              "Aborted"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint64,t_struct(RspMatchData)2246_storage)": {
            "label": "mapping(uint64 => struct IRockScissorsPaperDuel.RspMatchData)",
            "numberOfBytes": "32"
          },
          "t_struct(RspMatchData)2246_storage": {
            "label": "struct IRockScissorsPaperDuel.RspMatchData",
            "members": [
              {
                "label": "lastPlayer1ActionHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastPlayer2ActionHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "player1Actions",
                "type": "t_array(t_enum(RspAction)2393)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "player2Actions",
                "type": "t_array(t_enum(RspAction)2393)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "round",
                "type": "t_uint16",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "actionTimeLimit",
                "type": "t_uint40",
                "offset": 2,
                "slot": "4"
              },
              {
                "label": "revelationTimeLimit",
                "type": "t_uint40",
                "offset": 7,
                "slot": "4"
              },
              {
                "label": "player1",
                "type": "t_address",
                "offset": 12,
                "slot": "4"
              },
              {
                "label": "player2",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "player1Score",
                "type": "t_uint16",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "player2Score",
                "type": "t_uint16",
                "offset": 22,
                "slot": "5"
              },
              {
                "label": "checkpoint",
                "type": "t_uint40",
                "offset": 24,
                "slot": "5"
              },
              {
                "label": "player1Submitted",
                "type": "t_bool",
                "offset": 29,
                "slot": "5"
              },
              {
                "label": "player2Submitted",
                "type": "t_bool",
                "offset": 30,
                "slot": "5"
              },
              {
                "label": "state",
                "type": "t_enum(RspMatchState)2206",
                "offset": 31,
                "slot": "5"
              },
              {
                "label": "logicVersion",
                "type": "t_uint8",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "tieBreakScore",
                "type": "t_uint8",
                "offset": 1,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint40": {
            "label": "uint40",
            "numberOfBytes": "5"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a0070f959eb80c60c6b26ac4019366eeebc975f613a6fa10c92ca87cd59b0ea5": {
      "address": "0x15b3b4e8cE25Ef1a8a71908e89f0c762BcaC7834",
      "txHash": "0x3168cfcc557fab3347cca882ba0887dbf042d6ae947211b6ffa11c2bcdb40c2c",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "matches",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint64,t_struct(RspMatchData)2252_storage)",
            "contract": "RockScissorsPaperDuelStorage",
            "src": "contracts/RockScissorsPaperDuel.sol:14"
          },
          {
            "label": "duelGameHub",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "RockScissorsPaperDuelStorage",
            "src": "contracts/RockScissorsPaperDuel.sol:16"
          },
          {
            "label": "actionTimeLimit",
            "offset": 20,
            "slot": "1",
            "type": "t_uint40",
            "contract": "RockScissorsPaperDuelStorage",
            "src": "contracts/RockScissorsPaperDuel.sol:17"
          },
          {
            "label": "revelationTimeLimit",
            "offset": 25,
            "slot": "1",
            "type": "t_uint40",
            "contract": "RockScissorsPaperDuelStorage",
            "src": "contracts/RockScissorsPaperDuel.sol:18"
          },
          {
            "label": "tieBreakScore",
            "offset": 30,
            "slot": "1",
            "type": "t_uint8",
            "contract": "RockScissorsPaperDuelStorage",
            "src": "contracts/RockScissorsPaperDuel.sol:19"
          },
          {
            "label": "_initialized",
            "offset": 31,
            "slot": "1",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 0,
            "slot": "2",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "53",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "54",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "103",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_enum(RspAction)2399)dyn_storage": {
            "label": "enum RockScissorsPaperLogic.RspAction[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(RspAction)2399": {
            "label": "enum RockScissorsPaperLogic.RspAction",
            "members": [
              "Rock",
              "Scissor",
              "Paper"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(RspMatchState)2212": {
            "label": "enum IRockScissorsPaperDuel.RspMatchState",
            "members": [
              "Nil",
              "WaitingForActionHash",
              "WaitingForAction",
              "Player_1_Won",
              "Player_2_Won",
              "Drawn",
              "Aborted"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint64,t_struct(RspMatchData)2252_storage)": {
            "label": "mapping(uint64 => struct IRockScissorsPaperDuel.RspMatchData)",
            "numberOfBytes": "32"
          },
          "t_struct(RspMatchData)2252_storage": {
            "label": "struct IRockScissorsPaperDuel.RspMatchData",
            "members": [
              {
                "label": "lastPlayer1ActionHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastPlayer2ActionHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "player1Actions",
                "type": "t_array(t_enum(RspAction)2399)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "player2Actions",
                "type": "t_array(t_enum(RspAction)2399)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "round",
                "type": "t_uint16",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "actionTimeLimit",
                "type": "t_uint40",
                "offset": 2,
                "slot": "4"
              },
              {
                "label": "revelationTimeLimit",
                "type": "t_uint40",
                "offset": 7,
                "slot": "4"
              },
              {
                "label": "player1",
                "type": "t_address",
                "offset": 12,
                "slot": "4"
              },
              {
                "label": "player2",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "player1Score",
                "type": "t_uint16",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "player2Score",
                "type": "t_uint16",
                "offset": 22,
                "slot": "5"
              },
              {
                "label": "checkpoint",
                "type": "t_uint40",
                "offset": 24,
                "slot": "5"
              },
              {
                "label": "player1Submitted",
                "type": "t_bool",
                "offset": 29,
                "slot": "5"
              },
              {
                "label": "player2Submitted",
                "type": "t_bool",
                "offset": 30,
                "slot": "5"
              },
              {
                "label": "state",
                "type": "t_enum(RspMatchState)2212",
                "offset": 31,
                "slot": "5"
              },
              {
                "label": "logicVersion",
                "type": "t_uint8",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "tieBreakScore",
                "type": "t_uint8",
                "offset": 1,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint40": {
            "label": "uint40",
            "numberOfBytes": "5"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "32344a416c6fd2474c99d9338895078bc6ab43a79a809ef41853225b767aaed3": {
      "address": "0x6ae8b7B789e396bc86c865C12342aBbb7aF93663",
      "txHash": "0x7d2982545bc4cf09823460b77d7ad2fd0a7a1e31933e54ea960287b7f8af0c7f",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "matches",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint64,t_struct(RspMatchData)2284_storage)",
            "contract": "RockScissorsPaperDuelStorage",
            "src": "contracts/RockScissorsPaperDuel.sol:14"
          },
          {
            "label": "duelGameHub",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "RockScissorsPaperDuelStorage",
            "src": "contracts/RockScissorsPaperDuel.sol:16"
          },
          {
            "label": "actionTimeLimit",
            "offset": 20,
            "slot": "1",
            "type": "t_uint40",
            "contract": "RockScissorsPaperDuelStorage",
            "src": "contracts/RockScissorsPaperDuel.sol:17"
          },
          {
            "label": "revelationTimeLimit",
            "offset": 25,
            "slot": "1",
            "type": "t_uint40",
            "contract": "RockScissorsPaperDuelStorage",
            "src": "contracts/RockScissorsPaperDuel.sol:18"
          },
          {
            "label": "tieBreakScore",
            "offset": 30,
            "slot": "1",
            "type": "t_uint8",
            "contract": "RockScissorsPaperDuelStorage",
            "src": "contracts/RockScissorsPaperDuel.sol:19"
          },
          {
            "label": "_initialized",
            "offset": 31,
            "slot": "1",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 0,
            "slot": "2",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "53",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "54",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "103",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_enum(RspAction)2431)dyn_storage": {
            "label": "enum RockScissorsPaperLogic.RspAction[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(RspAction)2431": {
            "label": "enum RockScissorsPaperLogic.RspAction",
            "members": [
              "Rock",
              "Scissor",
              "Paper"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(RspMatchState)2244": {
            "label": "enum IRockScissorsPaperDuel.RspMatchState",
            "members": [
              "Nil",
              "WaitingForActionHash",
              "WaitingForAction",
              "Player_1_Won",
              "Player_2_Won",
              "Drawn",
              "Aborted"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint64,t_struct(RspMatchData)2284_storage)": {
            "label": "mapping(uint64 => struct IRockScissorsPaperDuel.RspMatchData)",
            "numberOfBytes": "32"
          },
          "t_struct(RspMatchData)2284_storage": {
            "label": "struct IRockScissorsPaperDuel.RspMatchData",
            "members": [
              {
                "label": "lastPlayer1ActionHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastPlayer2ActionHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "player1Actions",
                "type": "t_array(t_enum(RspAction)2431)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "player2Actions",
                "type": "t_array(t_enum(RspAction)2431)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "round",
                "type": "t_uint16",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "actionTimeLimit",
                "type": "t_uint40",
                "offset": 2,
                "slot": "4"
              },
              {
                "label": "revelationTimeLimit",
                "type": "t_uint40",
                "offset": 7,
                "slot": "4"
              },
              {
                "label": "player1",
                "type": "t_address",
                "offset": 12,
                "slot": "4"
              },
              {
                "label": "player2",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "player1Score",
                "type": "t_uint16",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "player2Score",
                "type": "t_uint16",
                "offset": 22,
                "slot": "5"
              },
              {
                "label": "checkpoint",
                "type": "t_uint40",
                "offset": 24,
                "slot": "5"
              },
              {
                "label": "player1Submitted",
                "type": "t_bool",
                "offset": 29,
                "slot": "5"
              },
              {
                "label": "player2Submitted",
                "type": "t_bool",
                "offset": 30,
                "slot": "5"
              },
              {
                "label": "state",
                "type": "t_enum(RspMatchState)2244",
                "offset": 31,
                "slot": "5"
              },
              {
                "label": "logicVersion",
                "type": "t_uint8",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "tieBreakScore",
                "type": "t_uint8",
                "offset": 1,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint40": {
            "label": "uint40",
            "numberOfBytes": "5"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d27231a8153e63a329c812474417bc2cadc5773e856eee384fb2a4c3132c59b1": {
      "address": "0x09338696461e7b94B6b2799713200d08adE5738D",
      "txHash": "0x42b2c189b18621c4abca58e2ad08e0e28bda8e800a2a2eb192c98c9ac65f1354",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "matches",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint64,t_struct(RspMatchData)2290_storage)",
            "contract": "RockScissorsPaperDuelStorage",
            "src": "contracts/RockScissorsPaperDuel.sol:14"
          },
          {
            "label": "duelGameHub",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "RockScissorsPaperDuelStorage",
            "src": "contracts/RockScissorsPaperDuel.sol:16"
          },
          {
            "label": "actionTimeLimit",
            "offset": 20,
            "slot": "1",
            "type": "t_uint40",
            "contract": "RockScissorsPaperDuelStorage",
            "src": "contracts/RockScissorsPaperDuel.sol:17"
          },
          {
            "label": "revelationTimeLimit",
            "offset": 25,
            "slot": "1",
            "type": "t_uint40",
            "contract": "RockScissorsPaperDuelStorage",
            "src": "contracts/RockScissorsPaperDuel.sol:18"
          },
          {
            "label": "tieBreakScore",
            "offset": 30,
            "slot": "1",
            "type": "t_uint8",
            "contract": "RockScissorsPaperDuelStorage",
            "src": "contracts/RockScissorsPaperDuel.sol:19"
          },
          {
            "label": "_initialized",
            "offset": 31,
            "slot": "1",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 0,
            "slot": "2",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "53",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "54",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "103",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_enum(RspAction)2437)dyn_storage": {
            "label": "enum RockScissorsPaperLogic.RspAction[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(RspAction)2437": {
            "label": "enum RockScissorsPaperLogic.RspAction",
            "members": [
              "Rock",
              "Scissor",
              "Paper"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(RspMatchState)2250": {
            "label": "enum IRockScissorsPaperDuel.RspMatchState",
            "members": [
              "Nil",
              "WaitingForActionHash",
              "WaitingForAction",
              "Player_1_Won",
              "Player_2_Won",
              "Drawn",
              "Aborted"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint64,t_struct(RspMatchData)2290_storage)": {
            "label": "mapping(uint64 => struct IRockScissorsPaperDuel.RspMatchData)",
            "numberOfBytes": "32"
          },
          "t_struct(RspMatchData)2290_storage": {
            "label": "struct IRockScissorsPaperDuel.RspMatchData",
            "members": [
              {
                "label": "lastPlayer1ActionHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastPlayer2ActionHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "player1Actions",
                "type": "t_array(t_enum(RspAction)2437)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "player2Actions",
                "type": "t_array(t_enum(RspAction)2437)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "round",
                "type": "t_uint16",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "actionTimeLimit",
                "type": "t_uint40",
                "offset": 2,
                "slot": "4"
              },
              {
                "label": "revelationTimeLimit",
                "type": "t_uint40",
                "offset": 7,
                "slot": "4"
              },
              {
                "label": "player1",
                "type": "t_address",
                "offset": 12,
                "slot": "4"
              },
              {
                "label": "player2",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "player1Score",
                "type": "t_uint16",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "player2Score",
                "type": "t_uint16",
                "offset": 22,
                "slot": "5"
              },
              {
                "label": "checkpoint",
                "type": "t_uint40",
                "offset": 24,
                "slot": "5"
              },
              {
                "label": "player1Submitted",
                "type": "t_bool",
                "offset": 29,
                "slot": "5"
              },
              {
                "label": "player2Submitted",
                "type": "t_bool",
                "offset": 30,
                "slot": "5"
              },
              {
                "label": "state",
                "type": "t_enum(RspMatchState)2250",
                "offset": 31,
                "slot": "5"
              },
              {
                "label": "logicVersion",
                "type": "t_uint8",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "tieBreakScore",
                "type": "t_uint8",
                "offset": 1,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint40": {
            "label": "uint40",
            "numberOfBytes": "5"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "593fbaae91494ace0435f577a30b2f27c5a4af4e86a406b37cd49d46acb07fcd": {
      "address": "0xD259B908dC485cf135786214B4eC6aAd338798dB",
      "txHash": "0xcbdf1841e33c9a7aee7407fb0327895c35f687bcd664090437c3889812e02f01",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "matches",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint64,t_struct(RspMatchData)2296_storage)",
            "contract": "RockScissorsPaperDuelStorage",
            "src": "contracts/RockScissorsPaperDuel.sol:14"
          },
          {
            "label": "duelGameHub",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "RockScissorsPaperDuelStorage",
            "src": "contracts/RockScissorsPaperDuel.sol:16"
          },
          {
            "label": "actionTimeLimit",
            "offset": 20,
            "slot": "1",
            "type": "t_uint40",
            "contract": "RockScissorsPaperDuelStorage",
            "src": "contracts/RockScissorsPaperDuel.sol:17"
          },
          {
            "label": "revelationTimeLimit",
            "offset": 25,
            "slot": "1",
            "type": "t_uint40",
            "contract": "RockScissorsPaperDuelStorage",
            "src": "contracts/RockScissorsPaperDuel.sol:18"
          },
          {
            "label": "tieBreakScore",
            "offset": 30,
            "slot": "1",
            "type": "t_uint8",
            "contract": "RockScissorsPaperDuelStorage",
            "src": "contracts/RockScissorsPaperDuel.sol:19"
          },
          {
            "label": "_initialized",
            "offset": 31,
            "slot": "1",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 0,
            "slot": "2",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "53",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "54",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "103",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_enum(RspAction)2443)dyn_storage": {
            "label": "enum RockScissorsPaperLogic.RspAction[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(RspAction)2443": {
            "label": "enum RockScissorsPaperLogic.RspAction",
            "members": [
              "Rock",
              "Scissor",
              "Paper"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(RspMatchState)2256": {
            "label": "enum IRockScissorsPaperDuel.RspMatchState",
            "members": [
              "Nil",
              "WaitingForActionHash",
              "WaitingForAction",
              "Player_1_Won",
              "Player_2_Won",
              "Drawn",
              "Aborted"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint64,t_struct(RspMatchData)2296_storage)": {
            "label": "mapping(uint64 => struct IRockScissorsPaperDuel.RspMatchData)",
            "numberOfBytes": "32"
          },
          "t_struct(RspMatchData)2296_storage": {
            "label": "struct IRockScissorsPaperDuel.RspMatchData",
            "members": [
              {
                "label": "lastPlayer1ActionHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastPlayer2ActionHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "player1Actions",
                "type": "t_array(t_enum(RspAction)2443)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "player2Actions",
                "type": "t_array(t_enum(RspAction)2443)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "round",
                "type": "t_uint16",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "actionTimeLimit",
                "type": "t_uint40",
                "offset": 2,
                "slot": "4"
              },
              {
                "label": "revelationTimeLimit",
                "type": "t_uint40",
                "offset": 7,
                "slot": "4"
              },
              {
                "label": "player1",
                "type": "t_address",
                "offset": 12,
                "slot": "4"
              },
              {
                "label": "player2",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "player1Score",
                "type": "t_uint16",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "player2Score",
                "type": "t_uint16",
                "offset": 22,
                "slot": "5"
              },
              {
                "label": "checkpoint",
                "type": "t_uint40",
                "offset": 24,
                "slot": "5"
              },
              {
                "label": "player1Submitted",
                "type": "t_bool",
                "offset": 29,
                "slot": "5"
              },
              {
                "label": "player2Submitted",
                "type": "t_bool",
                "offset": 30,
                "slot": "5"
              },
              {
                "label": "state",
                "type": "t_enum(RspMatchState)2256",
                "offset": 31,
                "slot": "5"
              },
              {
                "label": "logicVersion",
                "type": "t_uint8",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "tieBreakScore",
                "type": "t_uint8",
                "offset": 1,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint40": {
            "label": "uint40",
            "numberOfBytes": "5"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "808fd792b713d8871aec1853d2e3c8cf763680a9347b5abb9e957d1b3e055e43": {
      "address": "0x0a38a1Da266Cb5198042E2E1BA88211bd52231A9",
      "txHash": "0x0bc069819dc745e4ff577e0bc8b4baabe2e8cf5976d0e2aedf51b5a6f293aa0d",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "matches",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint64,t_struct(RspMatchData)2364_storage)",
            "contract": "DuelRockScissorsPaperStorage",
            "src": "contracts/DuelRockScissorsPaper.sol:14"
          },
          {
            "label": "gameHub",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "DuelRockScissorsPaperStorage",
            "src": "contracts/DuelRockScissorsPaper.sol:16"
          },
          {
            "label": "actionTimeLimit",
            "offset": 20,
            "slot": "1",
            "type": "t_uint40",
            "contract": "DuelRockScissorsPaperStorage",
            "src": "contracts/DuelRockScissorsPaper.sol:17"
          },
          {
            "label": "revelationTimeLimit",
            "offset": 25,
            "slot": "1",
            "type": "t_uint40",
            "contract": "DuelRockScissorsPaperStorage",
            "src": "contracts/DuelRockScissorsPaper.sol:18"
          },
          {
            "label": "tieBreakScore",
            "offset": 30,
            "slot": "1",
            "type": "t_uint8",
            "contract": "DuelRockScissorsPaperStorage",
            "src": "contracts/DuelRockScissorsPaper.sol:19"
          },
          {
            "label": "_initialized",
            "offset": 31,
            "slot": "1",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 0,
            "slot": "2",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "53",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "54",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "103",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_enum(RspAction)2519)dyn_storage": {
            "label": "enum RockScissorsPaperLogic.RspAction[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(RspAction)2519": {
            "label": "enum RockScissorsPaperLogic.RspAction",
            "members": [
              "Rock",
              "Scissor",
              "Paper"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(RspMatchState)2324": {
            "label": "enum IDuelRockScissorsPaper.RspMatchState",
            "members": [
              "Nil",
              "WaitingForActionHash",
              "WaitingForAction",
              "Player1Won",
              "Player2Won",
              "Drawn",
              "Aborted"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint64,t_struct(RspMatchData)2364_storage)": {
            "label": "mapping(uint64 => struct IDuelRockScissorsPaper.RspMatchData)",
            "numberOfBytes": "32"
          },
          "t_struct(RspMatchData)2364_storage": {
            "label": "struct IDuelRockScissorsPaper.RspMatchData",
            "members": [
              {
                "label": "lastPlayer1ActionHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastPlayer2ActionHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "player1Actions",
                "type": "t_array(t_enum(RspAction)2519)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "player2Actions",
                "type": "t_array(t_enum(RspAction)2519)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "round",
                "type": "t_uint16",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "actionTimeLimit",
                "type": "t_uint40",
                "offset": 2,
                "slot": "4"
              },
              {
                "label": "revelationTimeLimit",
                "type": "t_uint40",
                "offset": 7,
                "slot": "4"
              },
              {
                "label": "player1",
                "type": "t_address",
                "offset": 12,
                "slot": "4"
              },
              {
                "label": "player2",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "player1Score",
                "type": "t_uint16",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "player2Score",
                "type": "t_uint16",
                "offset": 22,
                "slot": "5"
              },
              {
                "label": "checkpoint",
                "type": "t_uint40",
                "offset": 24,
                "slot": "5"
              },
              {
                "label": "player1Submitted",
                "type": "t_bool",
                "offset": 29,
                "slot": "5"
              },
              {
                "label": "player2Submitted",
                "type": "t_bool",
                "offset": 30,
                "slot": "5"
              },
              {
                "label": "state",
                "type": "t_enum(RspMatchState)2324",
                "offset": 31,
                "slot": "5"
              },
              {
                "label": "logicVersion",
                "type": "t_uint8",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "tieBreakScore",
                "type": "t_uint8",
                "offset": 1,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint40": {
            "label": "uint40",
            "numberOfBytes": "5"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "2fd9a48a8b955321524f5f33081b2270781d31137d60568ee987f1b161312399": {
      "address": "0x6891cb9d7E756d8195800999C0E7be2114918Ac8",
      "txHash": "0xdb7069d1b802d4931bc9e29e76f11229e867794484fcaa602da23852552a2213",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "matches",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint64,t_struct(RspMatchData)1851_storage)",
            "contract": "AsyncRockScissorsPaperStorage",
            "src": "contracts/AsyncRockScissorsPaper.sol:14"
          },
          {
            "label": "matchPlayerActions",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_uint64,t_mapping(t_address,t_array(t_enum(Action)1945)dyn_storage))",
            "contract": "AsyncRockScissorsPaperStorage",
            "src": "contracts/AsyncRockScissorsPaper.sol:15"
          },
          {
            "label": "gameHub",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "AsyncRockScissorsPaperStorage",
            "src": "contracts/AsyncRockScissorsPaper.sol:17"
          },
          {
            "label": "roundNumber",
            "offset": 20,
            "slot": "2",
            "type": "t_uint8",
            "contract": "AsyncRockScissorsPaperStorage",
            "src": "contracts/AsyncRockScissorsPaper.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_uint256)50_storage",
            "contract": "AsyncRockScissorsPaperStorage",
            "src": "contracts/AsyncRockScissorsPaper.sol:20"
          },
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "53",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "53",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "54",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "105",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "154",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "205",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_enum(Action)1945)dyn_storage": {
            "label": "enum RockScissorsPaperLogic.Action[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_enum(Action)1945": {
            "label": "enum RockScissorsPaperLogic.Action",
            "members": [
              "Rock",
              "Scissor",
              "Paper"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_enum(Action)1945)dyn_storage)": {
            "label": "mapping(address => enum RockScissorsPaperLogic.Action[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_mapping(t_address,t_array(t_enum(Action)1945)dyn_storage))": {
            "label": "mapping(uint64 => mapping(address => enum RockScissorsPaperLogic.Action[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_struct(RspMatchData)1851_storage)": {
            "label": "mapping(uint64 => struct IAsyncRockScissorsPaper.RspMatchData)",
            "numberOfBytes": "32"
          },
          "t_struct(RspMatchData)1851_storage": {
            "label": "struct IAsyncRockScissorsPaper.RspMatchData",
            "members": [
              {
                "label": "player1Submitted",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "player2Submitted",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "roundNumber",
                "type": "t_uint8",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "logicVersion",
                "type": "t_uint8",
                "offset": 3,
                "slot": "0"
              },
              {
                "label": "player1",
                "type": "t_address",
                "offset": 4,
                "slot": "0"
              },
              {
                "label": "player2",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d8e3e218baa3591394bcf32a9d634b91ccbaa3bb8c7a02918c1aec9bc65c2d23": {
      "address": "0x4A677C128D2B906da564A10e4e29D8B301D54529",
      "txHash": "0x45f5fe3f88a943b23ddeb5ad6974188d3cfcbca09cc4779df4153f1ef8360784",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "matches",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint64,t_struct(RspMatchData)2368_storage)",
            "contract": "DuelRockScissorsPaperStorage",
            "src": "contracts/DuelRockScissorsPaper.sol:14"
          },
          {
            "label": "gameHub",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "DuelRockScissorsPaperStorage",
            "src": "contracts/DuelRockScissorsPaper.sol:16"
          },
          {
            "label": "actionTimeLimit",
            "offset": 20,
            "slot": "1",
            "type": "t_uint40",
            "contract": "DuelRockScissorsPaperStorage",
            "src": "contracts/DuelRockScissorsPaper.sol:17"
          },
          {
            "label": "revelationTimeLimit",
            "offset": 25,
            "slot": "1",
            "type": "t_uint40",
            "contract": "DuelRockScissorsPaperStorage",
            "src": "contracts/DuelRockScissorsPaper.sol:18"
          },
          {
            "label": "tieBreakScore",
            "offset": 30,
            "slot": "1",
            "type": "t_uint8",
            "contract": "DuelRockScissorsPaperStorage",
            "src": "contracts/DuelRockScissorsPaper.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DuelRockScissorsPaperStorage",
            "src": "contracts/DuelRockScissorsPaper.sol:21"
          },
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "52",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "52",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "53",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "153",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "204",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_enum(Action)2523)dyn_storage": {
            "label": "enum RockScissorsPaperLogic.Action[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(Action)2523": {
            "label": "enum RockScissorsPaperLogic.Action",
            "members": [
              "Rock",
              "Scissor",
              "Paper"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(RspMatchState)2328": {
            "label": "enum IDuelRockScissorsPaper.RspMatchState",
            "members": [
              "Nil",
              "WaitingForActionHash",
              "WaitingForAction",
              "Player1Won",
              "Player2Won",
              "Drawn",
              "Aborted"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint64,t_struct(RspMatchData)2368_storage)": {
            "label": "mapping(uint64 => struct IDuelRockScissorsPaper.RspMatchData)",
            "numberOfBytes": "32"
          },
          "t_struct(RspMatchData)2368_storage": {
            "label": "struct IDuelRockScissorsPaper.RspMatchData",
            "members": [
              {
                "label": "lastPlayer1ActionHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastPlayer2ActionHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "player1Actions",
                "type": "t_array(t_enum(Action)2523)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "player2Actions",
                "type": "t_array(t_enum(Action)2523)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "round",
                "type": "t_uint16",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "actionTimeLimit",
                "type": "t_uint40",
                "offset": 2,
                "slot": "4"
              },
              {
                "label": "revelationTimeLimit",
                "type": "t_uint40",
                "offset": 7,
                "slot": "4"
              },
              {
                "label": "player1",
                "type": "t_address",
                "offset": 12,
                "slot": "4"
              },
              {
                "label": "player2",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "player1Score",
                "type": "t_uint16",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "player2Score",
                "type": "t_uint16",
                "offset": 22,
                "slot": "5"
              },
              {
                "label": "checkpoint",
                "type": "t_uint40",
                "offset": 24,
                "slot": "5"
              },
              {
                "label": "player1Submitted",
                "type": "t_bool",
                "offset": 29,
                "slot": "5"
              },
              {
                "label": "player2Submitted",
                "type": "t_bool",
                "offset": 30,
                "slot": "5"
              },
              {
                "label": "state",
                "type": "t_enum(RspMatchState)2328",
                "offset": 31,
                "slot": "5"
              },
              {
                "label": "tieBreakScore",
                "type": "t_uint8",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "logicVersion",
                "type": "t_uint8",
                "offset": 1,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint40": {
            "label": "uint40",
            "numberOfBytes": "5"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6e8f087e00fb4cf864187e4c1955c6b48ab9b850794ccc6b5356f97fae38d7e7": {
      "address": "0x8843e8c4068a97A0c261f4caC7d3fE298277fa39",
      "txHash": "0x0d3ace733d1a633dc5d2eae653b15b38962369a49127994d0044dbd2d9daae03",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "matches",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint64,t_struct(RspMatchData)1617_storage)",
            "contract": "AsyncRockScissorsPaperStorage",
            "src": "contracts/AsyncRockScissorsPaper.sol:14"
          },
          {
            "label": "gameHub",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "AsyncRockScissorsPaperStorage",
            "src": "contracts/AsyncRockScissorsPaper.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)50_storage",
            "contract": "AsyncRockScissorsPaperStorage",
            "src": "contracts/AsyncRockScissorsPaper.sol:18"
          },
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "52",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "52",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "53",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "153",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "204",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_array(t_enum(Action)1679)dyn_storage)2_storage": {
            "label": "enum RockScissorsPaperLogic.Action[][2]",
            "numberOfBytes": "64"
          },
          "t_array(t_enum(Action)1679)dyn_storage": {
            "label": "enum RockScissorsPaperLogic.Action[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_enum(Action)1679": {
            "label": "enum RockScissorsPaperLogic.Action",
            "members": [
              "Rock",
              "Scissor",
              "Paper"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint64,t_struct(RspMatchData)1617_storage)": {
            "label": "mapping(uint64 => struct IAsyncRockScissorsPaper.RspMatchData)",
            "numberOfBytes": "32"
          },
          "t_struct(RspMatchData)1617_storage": {
            "label": "struct IAsyncRockScissorsPaper.RspMatchData",
            "members": [
              {
                "label": "playerActions",
                "type": "t_array(t_array(t_enum(Action)1679)dyn_storage)2_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "logicVersion",
                "type": "t_uint8",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "96bd10052a373483bb3b819f44367867adbaa4449865cb7cf0b986ddb7aee153": {
      "address": "0xe42F9662feaD869A27311394B11AA2FedE333801",
      "txHash": "0x77a81e36f29988783c7df7cc70c3a1939ab5d1312919d071ecbacb57641e793f",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "matches",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint64,t_struct(RspMatchData)3006_storage)",
            "contract": "AsyncRockScissorsPaperStorage",
            "src": "contracts/AsyncRockScissorsPaper.sol:14"
          },
          {
            "label": "gameHub",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "AsyncRockScissorsPaperStorage",
            "src": "contracts/AsyncRockScissorsPaper.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)50_storage",
            "contract": "AsyncRockScissorsPaperStorage",
            "src": "contracts/AsyncRockScissorsPaper.sol:18"
          },
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "52",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "52",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "53",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "153",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "204",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_array(t_enum(Action)3539)dyn_storage)2_storage": {
            "label": "enum RockScissorsPaperLogic.Action[][2]",
            "numberOfBytes": "64"
          },
          "t_array(t_enum(Action)3539)dyn_storage": {
            "label": "enum RockScissorsPaperLogic.Action[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_enum(Action)3539": {
            "label": "enum RockScissorsPaperLogic.Action",
            "members": [
              "Rock",
              "Scissor",
              "Paper"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint64,t_struct(RspMatchData)3006_storage)": {
            "label": "mapping(uint64 => struct IAsyncRockScissorsPaper.RspMatchData)",
            "numberOfBytes": "32"
          },
          "t_struct(RspMatchData)3006_storage": {
            "label": "struct IAsyncRockScissorsPaper.RspMatchData",
            "members": [
              {
                "label": "playerActions",
                "type": "t_array(t_array(t_enum(Action)3539)dyn_storage)2_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "logicVersion",
                "type": "t_uint8",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
